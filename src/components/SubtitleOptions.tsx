"use client";

import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Badge } from "@/components/ui/badge";
import { Subtitles, Languages } from "lucide-react";

interface SubtitleLanguage {
  code: string;
  name: string;
  auto?: boolean;
}

interface SubtitleOptionsProps {
  availableLanguages?: SubtitleLanguage[];
  includeSubtitles: boolean;
  selectedLanguage?: string;
  onIncludeSubtitlesChange: (include: boolean) => void;
  onLanguageChange: (language: string) => void;
  disabled?: boolean;
  className?: string;
}

const DEFAULT_LANGUAGES: SubtitleLanguage[] = [
  { code: "en", name: "English" },
  { code: "es", name: "Spanish" },
  { code: "fr", name: "French" },
  { code: "de", name: "German" },
  { code: "it", name: "Italian" },
  { code: "pt", name: "Portuguese" },
  { code: "ru", name: "Russian" },
  { code: "ja", name: "Japanese" },
  { code: "ko", name: "Korean" },
  { code: "zh", name: "Chinese" },
  { code: "ar", name: "Arabic" },
  { code: "hi", name: "Hindi" },
];

export function SubtitleOptions({
  availableLanguages = DEFAULT_LANGUAGES,
  includeSubtitles,
  selectedLanguage = "en",
  onIncludeSubtitlesChange,
  onLanguageChange,
  disabled = false,
  className,
}: SubtitleOptionsProps) {
  const [showLanguageSelect, setShowLanguageSelect] =
    useState(includeSubtitles);

  const handleIncludeSubtitlesChange = (checked: boolean) => {
    onIncludeSubtitlesChange(checked);
    setShowLanguageSelect(checked);

    // If enabling subtitles and no language is selected, default to English
    if (checked && !selectedLanguage) {
      onLanguageChange("en");
    }
  };

  const handleLanguageChange = (language: string) => {
    onLanguageChange(language);
  };

  const getLanguageDisplayName = (code: string) => {
    const language = availableLanguages.find((lang) => lang.code === code);
    return language ? language.name : code.toUpperCase();
  };

  const hasAutoGeneratedSubtitles = availableLanguages.some(
    (lang) => lang.auto
  );
  const manualSubtitles = availableLanguages.filter((lang) => !lang.auto);
  const autoSubtitles = availableLanguages.filter((lang) => lang.auto);

  return (
    <Card className={className}>
      <CardHeader>
        <CardTitle className="text-lg flex items-center gap-2">
          <Subtitles className="h-5 w-5" />
          Subtitle Options
          {availableLanguages.length > 0 && (
            <Badge variant="outline">
              {availableLanguages.length} language
              {availableLanguages.length !== 1 ? "s" : ""} available
            </Badge>
          )}
        </CardTitle>
      </CardHeader>

      <CardContent className="space-y-4">
        {/* Include Subtitles Toggle */}
        <div className="flex items-center space-x-2">
          <Checkbox
            id="include-subtitles"
            checked={includeSubtitles}
            onCheckedChange={handleIncludeSubtitlesChange}
            disabled={disabled}
          />
          <label
            htmlFor="include-subtitles"
            className="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
          >
            Include subtitles in download
          </label>
        </div>

        {/* Language Selection */}
        {showLanguageSelect && (
          <div className="space-y-3">
            <div className="space-y-2">
              <label className="text-sm font-medium">Subtitle Language</label>
              <Select
                value={selectedLanguage}
                onValueChange={handleLanguageChange}
                disabled={disabled}
              >
                <SelectTrigger>
                  <SelectValue placeholder="Select language">
                    <div className="flex items-center gap-2">
                      <Languages className="h-4 w-4" />
                      {getLanguageDisplayName(selectedLanguage)}
                    </div>
                  </SelectValue>
                </SelectTrigger>
                <SelectContent>
                  {/* Manual Subtitles */}
                  {manualSubtitles.length > 0 && (
                    <>
                      {manualSubtitles.map((language) => (
                        <SelectItem key={language.code} value={language.code}>
                          <div className="flex items-center gap-2">
                            <Languages className="h-4 w-4" />
                            {language.name}
                          </div>
                        </SelectItem>
                      ))}
                      {autoSubtitles.length > 0 && (
                        <div className="px-2 py-1 text-xs text-muted-foreground border-t">
                          Auto-generated
                        </div>
                      )}
                    </>
                  )}

                  {/* Auto-generated Subtitles */}
                  {autoSubtitles.map((language) => (
                    <SelectItem
                      key={`auto-${language.code}`}
                      value={language.code}
                    >
                      <div className="flex items-center gap-2">
                        <Languages className="h-4 w-4" />
                        {language.name}
                        <Badge variant="secondary" className="text-xs">
                          Auto
                        </Badge>
                      </div>
                    </SelectItem>
                  ))}

                  {/* Default Languages if none available */}
                  {availableLanguages.length === 0 &&
                    DEFAULT_LANGUAGES.map((language) => (
                      <SelectItem key={language.code} value={language.code}>
                        <div className="flex items-center gap-2">
                          <Languages className="h-4 w-4" />
                          {language.name}
                        </div>
                      </SelectItem>
                    ))}
                </SelectContent>
              </Select>
            </div>

            {/* Subtitle Info */}
            <div className="p-3 bg-muted rounded-lg">
              <div className="text-sm">
                <div className="flex items-center gap-2 mb-1">
                  <Subtitles className="h-4 w-4" />
                  <strong>Selected:</strong>{" "}
                  {getLanguageDisplayName(selectedLanguage)}
                </div>
                <p className="text-muted-foreground text-xs">
                  Subtitles will be embedded in the video file or downloaded as
                  separate SRT files.
                </p>
                {hasAutoGeneratedSubtitles && (
                  <p className="text-muted-foreground text-xs mt-1">
                    Auto-generated subtitles may have lower accuracy than manual
                    ones.
                  </p>
                )}
              </div>
            </div>
          </div>
        )}

        {/* No Subtitles Available */}
        {availableLanguages.length === 0 && includeSubtitles && (
          <div className="p-3 bg-yellow-50 dark:bg-yellow-950 border border-yellow-200 dark:border-yellow-800 rounded-lg">
            <div className="text-sm text-yellow-800 dark:text-yellow-200">
              <strong>No subtitles available</strong>
              <p className="text-xs mt-1">
                This video doesn't have subtitles available for download.
              </p>
            </div>
          </div>
        )}
      </CardContent>
    </Card>
  );
}
